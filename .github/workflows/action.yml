# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI/CD with Github Action

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: permission for gradlew
        run: chmod +x gradlew
      - name: Compile with Gradle
        run: make compile
  test:
    name: Test
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: permission for gradlew
        run: chmod +x gradlew
      - name: test
        run: make test
      - name: report
        uses: actions/upload-artifact@v2
        with:
          name: testreport
          path: build/reports
  assemble:
    name: Assemble
    needs: test
    runs-on: ubuntu-latest
    outputs:
      jar_name: ${{ steps.get_jarname.outputs.jar_name }}
      artifact_jar_name: ${{ steps.get_artifact_jarname.outputs.jar_name }}

    steps:
      - uses: actions/checkout@v2
      - name: permission for gradlew
        run: chmod +x gradlew
      - name: Assemble
        run: make assemble
      - id: get_jarname
        run: echo "::set-output name=jar_name::$(find ./build/libs -name '*.jar' -exec basename {} \;)"
      - id: get_artifact_jarname
        run: echo "::set-output name=jar_name::buildJar"
      - name: store assemble file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.get_artifact_jarname.outputs.jar_name }}
          path: build/libs/

  release:
    name: Release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: assemble
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get release name
        id: getReleaseName
        run: echo ::set-output name=RELEASE_NAME::${GITHUB_REF/refs\/tags\//}
      - name: Download jar file
        uses: actions/download-artifact@v2
        with:
          name: ${{needs.assemble.outputs.artifact_jar_name}}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.getReleaseName.outputs.RELEASE_NAME }}
          files: ${{needs.assemble.outputs.jar_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
